---
title: Mutliple Time Series Granger Causality
author: ''
date: '2019-06-12'
slug: mutliple-time-series-granger-causality
categories: []
tags: []
image:
  caption: ''
  focal_point: ''
---

We have recently submitted a paper about the short-term car registration forecasting. Forecasting models were based on several underlying variables which were analysed by a standard Vector Autoregressive Model. As the main purpose of the paper was not to present a black-box model with a good predictive power, we needed to analyse an importants of the car registration determinants.

A traditional approach to identify *"cause and effects"* in the context of time series analysis is to perform the Granger Causality test. Surprisingly, a treatment of the multivariate is not discussed much. Typically, two variables settings is presented with the caveat that solution works even for a more variables. This is only a partially true.

In the following text we will go through the simple 3 time-series example with various settings of interconnections.

## Three Variables, One driver

This example shows the analysis of the tree time series where the first time series *ts1* is a confounding time series.

```{r}
library(DiagrammeR)

grViz("
 digraph boxes_and_circles {

 graph [overlap = false, fontsize = 1, rankdir='LR']

 TS1 -> TS2 [label = 'AR1 + &#945;&#183;TS1']
 TS2 -> TS3 [label = 'No Relation', color= 'red', fontcolor='red'] 
 TS1 -> TS3 [label = 'AR1 + &#946;&#183;TS1']
}
")
```

The first time series (TS) is generated as an autoregressive proces AR(1):

```{r, message=FALSE, warning=FALSE}
library(dplyr)

ts1 <-  arima.sim(n = 100, list(ar = c(0.7)), sd = 1/2) %>% as.numeric
```
The second time series TS2 is computed as a standalone AR(1) process plus TS2 multiplied by value $\alpha=0.7$. Similarly, TS is based only only on its own autoregressive part plus $\beta=0.7 \cdot TS1$ values.

```{r}
alpha <- 0.7
beta  <- 0.7

ts2 <- arima.sim(n = 100, list(ar = c(0.7)), sd = 1/2) + alpha * dplyr::lag(ts1, 1) 
ts3 <- arima.sim(n = 100, list(ar = c(0.7)), sd = 1/2) + beta * dplyr::lag(ts1, 1) 

ts1 <- ts1 %>% as.numeric
ts2 <- ts2 %>% as.numeric
```


```{r}
grViz("
 digraph boxes_and_circles {

 graph [overlap = false, fontsize = 1, rankdir='LR']

 TS1 -> TS2 [label = 'AR1 + &#945;&#183;TS1']
 TS2 -> TS3 [label = 'AR1 + &#947;&#183;TS2'] 
 TS1 -> TS3 [label = 'AR1 + &#946;&#183;TS1']
}
")
```

```{r}
gamma <- 0.7

 ts1 <-  arima.sim(n = 100, list(ar = c(0.7)), sd = 1/2) %>% as.numeric
 ts2 <-  arima.sim(n = 100, list(ar = c(0.7)), sd = 1/2) + 
   alpha * dplyr::lag(ts1, 1) %>% as.numeric
 ts3 <-  arima.sim(n = 100, list(ar = c(0.7)), sd = 1/2) + 
   beta  * dplyr::lag(ts1, 1) + c(NA, gamma * dplyr::lag(ts2[-1], 1) ) %>% as.numeric
```

